      * @package cms
      * @link    http://www.cmsvt.com
      * @author  s waite <cmswest@sover.net>
      * @copyright Copyright (c) 2020 cms <cmswest@sover.net>
      * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
       IDENTIFICATION DIVISION.
       PROGRAM-ID. MCC025.
       AUTHOR. SID WAITE.
       DATE-COMPILED. TODAY.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT INSFILE ASSIGN TO "S30" ORGANIZATION IS INDEXED
           ACCESS IS DYNAMIC  RECORD KEY IS INS-KEY
           ALTERNATE RECORD KEY IS INS-NAME WITH DUPLICATES
           ALTERNATE RECORD KEY IS INS-CITY WITH DUPLICATES
           ALTERNATE RECORD KEY IS INS-ASSIGN WITH DUPLICATES
           ALTERNATE RECORD KEY IS INS-CLAIMTYPE WITH DUPLICATES
           ALTERNATE RECORD KEY IS INS-NEIC WITH DUPLICATES
           ALTERNATE RECORD KEY IS INS-NEIC-ASSIGN WITH DUPLICATES
           LOCK MODE MANUAL.
           SELECT FILEOUT ASSIGN TO "S35" 
           ORGANIZATION LINE SEQUENTIAL.
           SELECT AGEDATE ASSIGN TO "S40"
           ORGANIZATION LINE SEQUENTIAL.
           SELECT PAYBACK ASSIGN TO "S45"
           ORGANIZATION LINE SEQUENTIAL.
           SELECT PARMNAME ASSIGN TO "S50"
           ORGANIZATION LINE SEQUENTIAL.
           SELECT DOCFILE ASSIGN TO "S55"
           ORGANIZATION LINE SEQUENTIAL.
       DATA DIVISION.
       FILE SECTION.
       FD  INSFILE
     *     BLOCK CONTAINS 6 RECORDS
           DATA RECORD IS INSFILE01.
       01  INSFILE01.
           02 INS-KEY PIC XXX.
           02 INS-NAME PIC X(22).
           02 INS-STREET PIC X(24).
           02 INS-CITY PIC X(15).
           02 INS-STATE PIC XX.
           02 INS-ZIP PIC X(9).
           02 INS-ASSIGN PIC X.
           02 INS-CLAIMTYPE PIC X.
           02 INS-NEIC PIC X(5).
           02 INS-NEICLEVEL PIC X.
           02 INS-NEIC-ASSIGN PIC X.
           02 INS-PPO PIC X.
           02 INS-PRVNUM PIC X(10).
           02 INS-HMO PIC X(3).
           02 INS-STATUS PIC X.
           02 INS-LEVEL PIC X.
           02 INS-LASTDATE PIC X(8).
           02 INS-CAID PIC XXX.
           02 INS-REFWARN PIC X.
           02 INS-FUTURE PIC X(8).
       FD  DOCFILE
           DATA RECORD IS DOCFILE01.
       01  DOCFILE01.
           02 DOCNUM PIC 99.
           02 DOCNAME PIC X(20).
       FD FILEOUT.
       01  FILEOUT01 PIC X(133).
       FD  AGEDATE.
       01 AGEDATE01.
           02 AGDLYY PIC XXXX.
           02 AGDLMM PIC XX.
           02 AGDLDD PIC XX.
           02 AGDHYY PIC XXXX.
           02 AGDHMM PIC XX.
           02 AGDHDD PIC XX.
       FD  PAYBACK
           DATA RECORD IS PAYBACK01.
       01  PAYBACK01.
           02 FI-DOCP PIC 99.
           02 FI-YY PIC XXXX.
           02 FI-MM PIC XX.
           02 FI-DD PIC XX.
           02 FI-PAYCODE PIC 999.
           02 FI-AMOUNT PIC S9(4)V99.
           02 FI-NAME PIC X(24).
           02 FI-CYYMM.
             03 FI-CYY PIC XXXX.
             03 FI-CMM PIC XX.
           02 FI-CDD PIC XX.
           02 FI-PROC.
             03 FI-PROC1 PIC X(5).
             03 FI-PROC2 PIC XX.
           02 FI-DATE-E PIC X(8).
           02 FI-DENIAL PIC XX.
       FD  PARMNAME.
       01  PARMNAME01.
           02 PF1 PIC X(9).
           02 PF2 PIC X(40).
       WORKING-STORAGE SECTION.
       01  DOCTAB01.
           02 DOCTAB PIC X(20) OCCURS 98 TIMES.
       01  PAY-CNT01.
           02 PAY-CNT PIC 99999 OCCURS 999 TIMES.
       01  PAY-AMT01.
           02 PAY-AMT PIC S9(8)V99 OCCURS 999 TIMES.
       01  CNT-TOT01.
           02 CNT-TOT PIC 99999 OCCURS 999 TIMES.
           02 AMT-TOT PIC S9(8)V99 OCCURS 999 TIMES.
       01  REDU-CNT01.
           02 REDU-CNT PIC 99999 OCCURS 999 TIMES.
       01  REDU-AMT01.
           02 REDU-AMT PIC S9(8)V99 OCCURS 999 TIMES.
       01  REDUCNT-TOT01.
           02 REDUCNT-TOT PIC 99999 OCCURS 999 TIMES.
       01  REDUAMT-TOT01.
           02 REDUAMT-TOT PIC S9(8)V99 OCCURS 999 TIMES.
       01 LINE-1.
           02 F11 PIC X(21) VALUE "PAYMENT ANALYSIS FOR ".
           02 L1F1 PIC X(40).
           02 F12 PIC X(20) VALUE SPACE.
           02 L1F2LMM PIC X(2).
           02 F13 PIC X VALUE "-".
           02 L1F2LDD PIC X(2).
           02 F13 PIC X VALUE "-".
           02 L1F2LYY PIC X(4).
           02 F13 PIC XXXX VALUE " TO ".
           02 L1F2HMM PIC X(2).
           02 F13 PIC X VALUE "-".
           02 L1F2HDD PIC X(2).
           02 F13 PIC X VALUE "-".
           02 L1F2HYY PIC X(4).
           02 L1F3 PIC XXX.
       01 LINE-2.
           02 F21 PIC X(4) VALUE SPACE.
           02 L2F1 PIC X(9) VALUE "PAYORCODE".
           02 F22 PIC X(14) VALUE SPACE.
           02 L2F3 PIC X(6) VALUE "NUMBER".
           02 F24 PIC X(10) VALUE SPACE.
           02 L2F4 PIC X(6) VALUE "AMOUNT".
           02 F25 PIC XX VALUE SPACE.
           02 L26 PIC X(6) VALUE "  %%% ".
       01 LINE-3.
           02 F31 PIC X VALUE "(".
           02 L3F1 PIC ZZZ.
           02 F32 PIC XX VALUE ") ".
           02 L3F2 PIC X(18).
           02 F23 PIC X(4) VALUE SPACE.
           02 L3F3 PIC ZZ,ZZ9.
           02 F24 PIC XXX VALUE SPACE.
           02 L3F4 PIC ZZ,ZZZ,ZZ9.99CR.
           02 FILLER PIC X(4) VALUE SPACE.
           02 L3F5 PIC Z99.9.
       01  LINE-4.
           02 F41 PIC X(11).
           02 L4F1 PIC X(17).
           02 F42 PIC X(4) VALUE SPACE.
           02 L4F2 PIC ZZ,ZZ9.
           02 F43 PIC XXX VALUE SPACE.
           02 L4F3 PIC ZZ,ZZZ,ZZ9.99CR.
       01  LINE-19.
           02 L19F1 PIC XX VALUE "# ".
           02 L19F2 PIC X(11) VALUE "  PAY-DATE ".
           02 L19F3 PIC X(13) VALUE "PAYING PARTY ".
           02 L19F4 PIC X(11) VALUE "    AMOUNT ".
           02 L19F5 PIC X(18) VALUE " CHAR-DATE  PROC. ".
           02 L19F6 PIC X(8) VALUE "    NAME".
       01  LINE-20.
           02 L20F1 PIC XX.
           02 F201 PIC XX VALUE SPACE.
           02 L20F2 PIC XX.
           02 F202 PIC X VALUE "/".
           02 L20F3 PIC XX.
           02 F203 PIC X VALUE "/".
           02 L20F4 PIC XXXX.
           02 F204 PIC XX VALUE SPACE.
           02 L20F5 PIC X(10).
           02 F205 PIC X VALUE SPACE.
           02 L20F6 PIC ZZ,ZZ9.99CR.
           02 F206 PIC X VALUE SPACE.
           02 L20F7 PIC XX.
           02 F207 PIC X VALUE "/".
           02 L20F8 PIC XX.
           02 F208 PIC X VALUE "/".
           02 L20F9 PIC XXXX.
           02 F209 PIC XX VALUE SPACE.
           02 L20F10 PIC X(7).
           02 F210 PIC X VALUE SPACE.
           02 L20F11 PIC X(24).
       01  HOLD-DATE PIC X(8).
       01  TEST-DATE-S.
           02 T-YY PIC XXXX.
           02 T-MM PIC XX.
           02 T-DD PIC XX.
       01  INPUT-DATE-S.
           02 T-MM PIC XX.
           02 FILLER PIC X VALUE "/".
           02 T-DD PIC XX.
           02 FILLER PIC X VALUE "/".
           02 T-YY PIC XXXX.
       01  X PIC 999.
       01  Y PIC 99999.
       01  NUM3 PIC 999.
       01  NUM4 PIC 99999 VALUE 0.
       01  Z PIC 999.
       01  PARTCNT PIC 99999 VALUE 0.
       01  PARTPAY PIC S9(8)V99 VALUE 0.
       01  ADJ-CNT PIC 99999.
       01  ADJ-AMT PIC S9(8)V99.
       01  START-DATE PIC X(8).
       01  DOT01 PIC X(48).
       01  HOLD PIC X(5).
       01  NOPRINT-TAB01.
           02 NOPRINT-TAB PIC 99 OCCURS 98 TIMES.
       01  ALF-2 PIC XX.
       01 NUM-3 PIC 999.
        01 MON-TAB-RE01.
           02 FILLER PIC X(27) VALUE "JANUARY  FEBRUARY MARCH    ".
          02 FILLER PIC X(27) VALUE "APRIL    MAY      JUNE     ".
          02 FILLER PIC X(27) VALUE "JULY     AUGUST   SEPTEMBER".
          02 FILER PIC X(27) VALUE "OCTOBER  NOVEMBER DECEMBER ".
       01 MON-TAB01 REDEFINES MON-TAB-RE01.
           02 MON-TAB PIC X(9) OCCURS 12 TIMES.
       01  LINE-X PIC 99 VALUE 0.
       01  PAGE-X PIC 9999 VALUE 0.
       01  L1-NAME PIC X(40).
       01  TOTCOMM PIC S9(8)V99 VALUE 0.
       01  HOLD-DOC PIC 99.
       PROCEDURE DIVISION.
       0005-START.

           MOVE ALL " -" TO DOT01.
           MOVE ALL ZEROES TO NOPRINT-TAB01.
           OPEN INPUT AGEDATE PAYBACK PARMNAME INSFILE DOCFILE.
           OPEN OUTPUT FILEOUT.
           READ PARMNAME. MOVE PARMNAME01 TO L1-NAME.
           READ AGEDATE.
           MOVE AGDLMM TO L1F2LMM
           MOVE AGDLDD TO L1F2LDD
           MOVE AGDLYY TO L1F2LYY
           MOVE AGDHMM TO L1F2HMM
           MOVE AGDHDD TO L1F2HDD
           MOVE AGDHYY TO L1F2HYY
           MOVE SPACE TO L4F1
           READ PAYBACK AT END GO TO P5.
       P000. READ DOCFILE AT END GO TO P1-0.
           MOVE DOCNAME TO DOCTAB(DOCNUM) GO TO P000.
       P1-0.
           PERFORM B1 VARYING Y FROM 1 BY 1 UNTIL Y > 999.
       P1-00.
           MOVE FI-DOCP TO HOLD-DOC
           MOVE FI-PROC1 TO HOLD
           MOVE DOCTAB(FI-DOCP) TO L1F1
      *     MOVE "P.A.      " TO L1F1
           PERFORM L1
           GO TO P4.
       P2. READ PAYBACK AT END GO TO P6.
       P4. IF (FI-DOCP NOT = HOLD-DOC) PERFORM P5
           GO TO P1-0.
      *     IF FI-PROC1 NOT = HOLD PERFORM A3
      *     GO TO P1-00.
           MOVE FI-PAYCODE TO X.
           IF FI-DENIAL = "14" ADD 1 TO REDU-CNT(X)
           ADD FI-AMOUNT TO REDU-AMT(X) ELSE
           ADD 1 TO PAY-CNT(X) ADD FI-AMOUNT TO PAY-AMT(X).
           PERFORM Z1 THRU Z1-EXIT
           GO TO P2.
       A3.
           WRITE FILEOUT01 FROM LINE-2 AFTER 2.
           MOVE 0 TO ADJ-CNT ADJ-AMT.
      *    MOVE L2F6 TO L4F1.
           PERFORM B3 VARYING Y FROM 1 BY 1 UNTIL Y > 999.
           WRITE FILEOUT01 FROM DOT01.
           MOVE "TOTAL ADJ." TO F41.
           MOVE ADJ-CNT TO L4F2
           MOVE ADJ-AMT TO L4F3.
           WRITE FILEOUT01 FROM LINE-4.
           COMPUTE ADJ-CNT = PARTCNT - ADJ-CNT.
           COMPUTE ADJ-AMT = PARTPAY - ADJ-AMT.
           MOVE "TOTAL CASH" TO F41.
           MOVE ADJ-CNT TO L4F2
           MOVE ADJ-AMT TO L4F3.
           WRITE FILEOUT01 FROM LINE-4.
           WRITE FILEOUT01 FROM DOT01.
           MOVE PARTCNT TO L4F2
           MOVE PARTPAY TO L4F3
           MOVE "TOTALS FOR" TO F41
           WRITE FILEOUT01 FROM LINE-4
           WRITE FILEOUT01 FROM DOT01.
           WRITE FILEOUT01 FROM DOT01.
           MOVE 0 TO PARTCNT PARTPAY ADJ-CNT ADJ-AMT.
       B1. MOVE 0 TO PAY-CNT(Y) PAY-AMT(Y) CNT-TOT(Y) AMT-TOT(Y)
           REDU-CNT(Y) REDU-AMT(Y) REDUCNT-TOT(Y) REDUAMT-TOT(Y).
       B2. MOVE 0 TO PAY-CNT(Y) PAY-AMT(Y) REDU-CNT(Y) REDU-AMT(Y).
       B3. IF PAY-CNT(Y) > 0 OR REDU-CNT(Y) > 0
           MOVE PAY-CNT(Y) TO L3F3
           MOVE PAY-AMT(Y) TO L3F4
           MOVE Y TO L3F1
           COMPUTE NUM3 = Y
           MOVE NUM3 TO INS-KEY
           MOVE "***BAD CODE***" TO INS-NAME
           READ INSFILE
           MOVE INS-NAME TO L3F2
           ADD PAY-CNT(Y) TO PARTCNT CNT-TOT(Y)
           ADD PAY-AMT(Y) TO PARTPAY AMT-TOT(Y)
           ADD REDU-CNT(Y) TO PARTCNT REDUCNT-TOT(Y)
           ADD REDU-AMT(Y) TO PARTPAY REDUAMT-TOT(Y)
           WRITE FILEOUT01 FROM LINE-3.
           IF REDU-CNT(Y) > 0
           MOVE REDU-CNT(Y) TO L3F3
           MOVE REDU-AMT(Y) TO L3F4
           MOVE "REDUCTION" TO L3F2
           ADD REDU-CNT(Y) TO ADJ-CNT
           ADD REDU-AMT(Y) TO ADJ-AMT
           MOVE SPACE TO F31 F32
           MOVE 0 TO L3F1
           WRITE FILEOUT01 FROM LINE-3
           MOVE "(" TO F31
           MOVE ")" TO F32.
           IF (Y > 6 AND < 20 ) AND ( Y NOT = 18 )
           ADD PAY-CNT(Y) TO ADJ-CNT
           ADD PAY-AMT(Y) TO ADJ-AMT.
           MOVE 0 TO PAY-CNT(Y) PAY-AMT(Y) REDU-CNT(Y) REDU-AMT(Y).
       B4. IF CNT-TOT(Y) > 0 OR REDUCNT-TOT(Y) > 0
           ADD CNT-TOT(Y) TO PARTCNT ADD AMT-TOT(Y) TO PARTPAY
           ADD REDUCNT-TOT(Y) TO PARTCNT ADD REDUAMT-TOT(Y) TO PARTPAY
           MOVE CNT-TOT(Y) TO L3F3
           MOVE AMT-TOT(Y) TO L3F4
           MOVE Y TO L3F1
           COMPUTE NUM3 = Y
           MOVE NUM3 TO INS-KEY
           MOVE "***BAD CODE***" TO INS-NAME
           READ INSFILE
           MOVE INS-NAME TO L3F2
           WRITE FILEOUT01 FROM LINE-3.
           IF REDUCNT-TOT(Y) > 0
           MOVE REDUCNT-TOT(Y) TO L3F3
           MOVE REDUAMT-TOT(Y) TO L3F4
           MOVE "REDUCTION" TO L3F2
           ADD REDUCNT-TOT(Y) TO ADJ-CNT
           ADD REDUAMT-TOT(Y) TO ADJ-AMT
           MOVE SPACE TO F31 F32
           MOVE 0 TO L3F1
           WRITE FILEOUT01 FROM LINE-3
           MOVE "(" TO F31
           MOVE ")" TO F32.
           IF (Y > 6 AND < 20 ) AND ( Y NOT = 18 )
           ADD CNT-TOT(Y) TO ADJ-CNT
           ADD AMT-TOT(Y) TO ADJ-AMT.
       L1. WRITE FILEOUT01 FROM LINE-1 AFTER PAGE.
           WRITE FILEOUT01 FROM LINE-19 AFTER 2.
           MOVE SPACE TO FILEOUT01 WRITE FILEOUT01.
       Z1. MOVE FI-DOCP TO L20F1
           MOVE FI-MM TO L20F2
           MOVE FI-DD TO L20F3
           MOVE FI-YY TO L20F4
           MOVE FI-PAYCODE TO INS-KEY
           READ INSFILE INVALID MOVE SPACE TO INS-NAME.
           MOVE INS-NAME TO L20F5
           MOVE FI-AMOUNT TO L20F6
           MOVE FI-CMM TO L20F7
           MOVE FI-CDD TO L20F8
           MOVE FI-CYY TO L20F9
           MOVE FI-PROC TO L20F10
           MOVE FI-NAME TO L20F11
           IF FI-DENIAL = "14" MOVE "REDUCTION " TO L20F5.
           WRITE FILEOUT01 FROM LINE-20.
       Z1-EXIT. EXIT.
       P5. PERFORM A3
           MOVE L1-NAME TO L1F1
           WRITE FILEOUT01 FROM LINE-1 AFTER PAGE.
           MOVE 0 TO ADJ-CNT ADJ-AMT PARTCNT PARTPAY.
           MOVE "TOTALS  " TO L4F1.
           PERFORM B4 VARYING Y FROM 1 BY 1 UNTIL Y > 999.
           WRITE FILEOUT01 FROM DOT01.
           MOVE "TOTAL ADJ." TO F41.
           MOVE ADJ-CNT TO L4F2
           MOVE ADJ-AMT TO L4F3.
           WRITE FILEOUT01 FROM LINE-4.
           COMPUTE ADJ-CNT = PARTCNT - ADJ-CNT.
           COMPUTE ADJ-AMT = PARTPAY - ADJ-AMT.
           MOVE "TOTAL CASH" TO F41.
           MOVE ADJ-CNT TO L4F2
           MOVE ADJ-AMT TO L4F3.
           WRITE FILEOUT01 FROM LINE-4.
           MOVE ALL " -" TO FILEOUT01.
           WRITE FILEOUT01 FROM DOT01.
           MOVE PARTCNT TO L4F2
           MOVE PARTPAY TO L4F3
           MOVE "TOTALS FOR" TO F41
           WRITE FILEOUT01 FROM LINE-4
           WRITE FILEOUT01 FROM DOT01.
           WRITE FILEOUT01 FROM DOT01.
           MOVE "TOTAL COM." TO F41
           MOVE ADJ-CNT TO L4F2
           MOVE TOTCOMM TO L4F3.
           WRITE FILEOUT01 FROM LINE-4 AFTER 2
           WRITE FILEOUT01 FROM DOT01.
           WRITE FILEOUT01 FROM DOT01.
           WRITE FILEOUT01 FROM DOT01.
       P6. PERFORM P5
           CLOSE FILEOUT. STOP RUN.
